@page "/FlowByCategory"
@using MoneyMap.Data;
@inject Cash_Flow_Service CFS;

@if(expensesByCategory is null){
    <em>Loading..</em>
}
else { 
        <h7>FLOW BY CATEGORY</h7>

        <table class="table">

            <thead>
                <tr>
                    <th>Description</th>
                    <th>Movement</th>
                </tr>
            </thead>
            <tbody>
                @foreach (string k in expensesByCategory.Keys)
                {

                    <tr>
                        <td>@k</td>
                        @if(expensesByCategory[k]>0){
                            <td class="text-success">@Math.Round(expensesByCategory[k], 2)</td>
                        }
                        else {
                        <td class="text-danger">@Math.Round(expensesByCategory[k], 2)
                        </td>
                        }

                    </tr>
                }
                </tbody>
        </table>
}

@code{
    [Parameter]
    public List<Cash_Flow> cash_flows{get;set;}
    public Dictionary<string, float> expensesByCategory{get; set;}

    protected override async Task OnInitializedAsync(){
        expensesByCategory = await Task.Run(() => GetExpensesByCategory());
    }

    public Dictionary<string, float> GetExpensesByCategory(){
        Dictionary<string, float>ebc = new();
        foreach(Cash_Flow c in cash_flows){
            if(ebc.ContainsKey(c.description))
                ebc[c.description] += c.movement;
            
            else{
                ebc.Add(c.description, c.movement);
            }
        }
        return ebc;
    }
}