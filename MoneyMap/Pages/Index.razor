@page "/"
@using MoneyMap.Data
@inject Cash_Flow_Service CFS

<NavLink class="nav-link" href="Cash_Flow_Add">
    <span class="oi oi-plus" aria-hidden="true"></span> Add Transaction
</NavLink>
@if(Categories is null || cFlow is null)
{
    <p><em>Loading..</em></p>
}
else
{   
    <div class="row">
        <div class = "col-md-4">
            <div class="form-group">
            <label clas="control-label">Category</label>
            <select @bind="catProperty" class=" form-control ">

                <option value="All">All</option>
                @foreach (var c in Categories)
                {
                    <option value="@c"> @c  </option>
                }

            </select>
            </div>
        </div>
    </div>
    <MoneyCard value=@cFlow.Sum(c=>c.movement) title="Savings" text="Your total saving"/>
    <FlowTable cash_flows="@cFlow"/>
    <FlowByCategoryTable cash_flows="@cFlow"/>

}


@code{

    public List<Cash_Flow> cFlow {get;set;}
    public HashSet<String> Categories{get; set;} = new();

    public string category{get; set;}
    public string catProperty{
        get{
            return category;
        }
        set{
            category = value;
            Filter();
        }
    }
    protected override async Task OnInitializedAsync()
    {
        cFlow = await Task.Run(() => CFS.GetCashFlow());
        foreach(Cash_Flow c in cFlow){
            Categories.Add(c.description);
        }

    }

    public void Filter(){
        if(category == "All"){
            cFlow = CFS.GetCashFlow();
        }
        else{
            cFlow = CFS.GetFilteredCashFlow(category);
        }

    }


}